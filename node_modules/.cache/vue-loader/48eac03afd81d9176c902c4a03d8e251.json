{"remainingRequest":"/home/vu/code/vuejs/todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vu/code/vuejs/todo-app/src/components/TodoApp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vu/code/vuejs/todo-app/src/components/TodoApp.vue","mtime":1631457365033},{"path":"/home/vu/code/vuejs/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vu/code/vuejs/todo-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vu/code/vuejs/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vu/code/vuejs/todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSGVsbG9Xb3JsZCIsCiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2s6ICIiLAogICAgICBlZGl0ZWRUYXNrOiBudWxsLAogICAgICBhdmFpbGFibGVTdGF0dXNlczogWyJ0by1kbyIsICJpbi1wcm9ncmVzcyIsICJmaW5pc2hlZCJdLAogICAgICB0YXNrczogW10sCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc3VibWl0VGFzaygpIHsKICAgICAgaWYgKHRoaXMudGFzay5sZW5ndGggPT09IDApIHJldHVybjsKCiAgICAgIGlmICh0aGlzLmVkaXRlZFRhc2sgPT09IG51bGwpIHsKICAgICAgICB0aGlzLnRhc2tzLnB1c2goewogICAgICAgICAgbmFtZTogdGhpcy50YXNrLAogICAgICAgICAgc3RhdHVzOiAidG8tZG8iLAogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudGFza3NbdGhpcy5lZGl0ZWRUYXNrXS5uYW1lID0gdGhpcy50YXNrOwogICAgICAgIHRoaXMuZWRpdGVkVGFzayA9IG51bGw7CiAgICAgIH0KICAgICAgdGhpcy50YXNrID0gIiI7CiAgICAgIHRoaXMuc2F2ZVRvRGF0YWJhc2UoKTsKICAgIH0sCiAgICBkZWxldGVUYXNrKGluZGV4KSB7CiAgICAgIHRoaXMudGFza3Muc3BsaWNlKGluZGV4LCAxKTsKICAgIH0sCiAgICBlZGl0VGFzayhpbmRleCkgewogICAgICB0aGlzLnRhc2sgPSB0aGlzLnRhc2tzW2luZGV4XS5uYW1lOwogICAgICB0aGlzLmVkaXRlZFRhc2sgPSBpbmRleDsKICAgIH0sCiAgICBjaGFuZ2VTdGF0dXMoaW5kZXgpIHsKICAgICAgbGV0IG5ld0luZGV4ID0gdGhpcy5hdmFpbGFibGVTdGF0dXNlcy5pbmRleE9mKHRoaXMudGFza3NbaW5kZXhdLnN0YXR1cyk7CiAgICAgIGlmICgrK25ld0luZGV4ID4gMikgbmV3SW5kZXggPSAwOwogICAgICB0aGlzLnRhc2tzW2luZGV4XS5zdGF0dXMgPSB0aGlzLmF2YWlsYWJsZVN0YXR1c2VzW25ld0luZGV4XTsKICAgIH0sCiAgICBmaXJzdENoYXJVcHBlcihzdHIpIHsKICAgICAgcmV0dXJuIHN0ci5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0ci5zbGljZSgxKTsKICAgIH0sCiAgICBzYXZlVG9EYXRhYmFzZSgpIHsKICAgICAgY29uc3Qgc3RyID0gSlNPTi5zdHJpbmdpZnkodGhpcy50YXNrcyk7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ0b2RvLWRhdGFiYXNlIiwgc3RyKTsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgY29uc3QgcmF3VmFsdWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidG9kby1kYXRhYmFzZSIpOwogICAgY29uc29sZS5sb2coInJhdzogIiwgcmF3VmFsdWUpOwogICAgaWYgKHJhd1ZhbHVlKSB7CiAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKHJhd1ZhbHVlKTsKICAgICAgdGhpcy50YXNrcyA9IGRhdGE7CiAgICB9CiAgfSwKfTsK"},{"version":3,"sources":["TodoApp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoApp.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h2 class=\"text-center mt-5\">My Vue Todo App</h2>\n    <!-- Input -->\n    <div class=\"d-flex\">\n      <input\n        v-model=\"task\"\n        type=\"text\"\n        placeholder=\"Enter task\"\n        class=\"form-control\"\n      />\n      <button @click=\"submitTask\" class=\"btn btn-warning rounded-0\">\n        SUBMIT\n      </button>\n    </div>\n    <!-- Task table -->\n    <table class=\"table table-bordered mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Task</th>\n          <th scope=\"col\">Status</th>\n          <th scope=\"col\" class=\"text-center\">#</th>\n          <th scope=\"col\" class=\"text-center\">#</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(task, index) in tasks\" :key=\"index\">\n          <td>\n            <span :class=\"{ finished: task.status === 'finished' }\">{{\n              task.name\n            }}</span>\n          </td>\n          <td>\n            <span @click=\"changeStatus(index)\" class=\"pointer\">\n              {{ firstCharUpper(task.status) }}\n            </span>\n          </td>\n          <td>\n            <div class=\"text-center\" @click=\"editTask(index)\">\n              <span class=\"fa fa-pen\"></span>\n            </div>\n          </td>\n          <td>\n            <div class=\"text-center\" @click=\"deleteTask(index)\">\n              <span class=\"fa fa-trash\"></span>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      task: \"\",\n      editedTask: null,\n      availableStatuses: [\"to-do\", \"in-progress\", \"finished\"],\n      tasks: [],\n    };\n  },\n  methods: {\n    submitTask() {\n      if (this.task.length === 0) return;\n\n      if (this.editedTask === null) {\n        this.tasks.push({\n          name: this.task,\n          status: \"to-do\",\n        });\n      } else {\n        this.tasks[this.editedTask].name = this.task;\n        this.editedTask = null;\n      }\n      this.task = \"\";\n      this.saveToDatabase();\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n    editTask(index) {\n      this.task = this.tasks[index].name;\n      this.editedTask = index;\n    },\n    changeStatus(index) {\n      let newIndex = this.availableStatuses.indexOf(this.tasks[index].status);\n      if (++newIndex > 2) newIndex = 0;\n      this.tasks[index].status = this.availableStatuses[newIndex];\n    },\n    firstCharUpper(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    saveToDatabase() {\n      const str = JSON.stringify(this.tasks);\n      localStorage.setItem(\"todo-database\", str);\n    },\n  },\n  mounted() {\n    const rawValue = localStorage.getItem(\"todo-database\");\n    console.log(\"raw: \", rawValue);\n    if (rawValue) {\n      const data = JSON.parse(rawValue);\n      this.tasks = data;\n    }\n  },\n};\n</script>\n\n<style scoped>\n.pointer {\n  cursor: pointer;\n}\n.finished {\n  text-decoration: line-through;\n}\n</style>\n"]}]}